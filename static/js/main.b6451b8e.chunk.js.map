{"version":3,"sources":["../../lrct/dist/styles/Mixin.js","../../lrct/dist/components/Header.js","../../lrct/dist/components/Footer.js","../../lrct/dist/styles/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["flexCenterRow","flexCenterColumn","Header","header","withConfig","displayName","componentId","p","theme","color","primary","text","fontSize","Footer","footer","_templateObject","data","name","primaryText","secondaryText","divider","lightPrimary","darkPrimary","accentColor","disabled","idle","pending","running","success","error","zIndex","logo","fab","modal","content","font","title","subtitle","code","Global","Separator","div","width","height","Text","span","year","Date","getFullYear","App","href","repository","target","rel","version","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b6451b8e.chunk.js","sourcesContent":["import { css as _css } from \"styled-components\";\nexport var flexCenterRow =\n/*#__PURE__*/\n_css([\"display:flex;justify-content:center;align-items:center;\"]);\nexport var flexCenterColumn =\n/*#__PURE__*/\n_css([\"\", \" flex-direction:column;\"], flexCenterRow);","import _styled from \"styled-components\";\nimport { flexCenterColumn } from '../styles/Mixin';\nexport var Header =\n/*#__PURE__*/\n_styled.header.withConfig({\n  displayName: \"Header\",\n  componentId: \"sc-1lpr0fz-0\"\n})([\"\", \" height:100vh;width:100vw;background:\", \";color:\", \";font-size:\", \"em;font-weight:100;\"], flexCenterColumn, function (p) {\n  return p.theme.color.primary;\n}, function (p) {\n  return p.theme.color.text;\n}, function (p) {\n  return p.theme.fontSize.header;\n});","import _styled from \"styled-components\";\nimport { flexCenterRow } from '../styles/Mixin';\nexport var Footer =\n/*#__PURE__*/\n_styled.footer.withConfig({\n  displayName: \"Footer\",\n  componentId: \"sc-1jfv63x-0\"\n})([\"\", \" height:3em;width:100vw;\"], flexCenterRow);","import _taggedTemplateLiteral from \"/media/jojo/IvyMike/pro/lrct/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { createGlobalStyle as _createGlobalStyle } from \"styled-components\";\nimport _styled from \"styled-components\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  html,\\n  body,\\n  #root {\\n    margin: 0;\\n    padding: 0;\\n    height: 100%;\\n    width: 100%;\\n    overflow: hidden;\\n    user-select: none;\\n    font-family: \", \";\\n\\n    \", \";\\n  }\\n\\n  a {\\n    color: \", \";\\n    text-decoration: none;\\n  }\\n\\n  a:visited {\\n    color: \", \";\\n  }\\n\\n  a:hover,\\n  a:visited:hover {\\n    color: \", \";\\n  }\\n\\n  ::-webkit-scrollbar {\\n    width: 9px;\\n    height: 9px;\\n  }\\n\\n  ::-webkit-scrollbar-track {\\n    background: \", \";\\n  }\\n\\n  ::-webkit-scrollbar-thumb {\\n    background: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { flexCenterColumn } from './Mixin';\nexport var theme = {\n  name: 'default',\n  color: {\n    text: '#FFFFFF',\n    primaryText: '#212121',\n    secondaryText: '#757575',\n    divider: '#BDBDBD',\n    primary: '#9C27B0',\n    lightPrimary: '#E1BEE7',\n    darkPrimary: '#7B1FA2',\n    accentColor: '#7C4DFF',\n    disabled: '#aaa',\n    idle: '#bc7eb6',\n    pending: '#E7AB48',\n    running: '#3772FF',\n    success: '#16b50c',\n    error: '#b00020'\n  },\n  zIndex: {\n    logo: 1000,\n    fab: 1200,\n    modal: 1500\n  },\n  fontSize: {\n    header: 3\n  },\n  content: {},\n  font: {\n    title: '',\n    subtitle: '',\n    text: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen','Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',sans-serif\",\n    code: \"'Source Code Pro', monospace\"\n  }\n};\nexport var Global = _createGlobalStyle(_templateObject(), function (p) {\n  return p.theme.font.text;\n}, flexCenterColumn, function (p) {\n  return p.theme.color.primary;\n}, function (p) {\n  return p.theme.color.accentColor;\n}, function (p) {\n  return p.theme.color.darkPrimary;\n}, function (p) {\n  return p.theme.color.primary;\n}, function (p) {\n  return p.theme.color.darkPrimary;\n});\nexport var Separator =\n/*#__PURE__*/\n_styled.div.withConfig({\n  displayName: \"styles__Separator\",\n  componentId: \"sv8fqt-0\"\n})([\"width:\", \"em;height:\", \"em;\"], function (p) {\n  return p.width || 0;\n}, function (p) {\n  return p.height || 0;\n});\nexport var Text =\n/*#__PURE__*/\n_styled.span.withConfig({\n  displayName: \"styles__Text\",\n  componentId: \"sv8fqt-1\"\n})([\"color:\", \";font-size:\", \";\"], function (p) {\n  return p.color ? p.theme.color[p.color] : p.theme.color.primary;\n}, function (p) {\n  return p.fontSize || '1em';\n});","import React from 'react'\n\nimport { hot } from 'react-hot-loader/root'\nimport { ThemeProvider } from 'styled-components/macro'\n\nimport { Header } from 'lrct/components/Header'\nimport { Footer } from 'lrct/components/Footer'\nimport { theme, Global, Separator, Text } from 'lrct/styles'\n\nimport { version, repository } from '../package.json'\n\nconst date = new Date()\nconst year = date.getFullYear()\n\nconst App: React.FC = () => (\n  <ThemeProvider theme={theme}>\n    <>\n      <Global />\n      <Header>Hi</Header>\n      <Footer>\n        <Text color=\"primary\">Â© {year} L</Text> <Separator width={0.5} />\n        <Separator width={0.5} />\n        <a\n          href={`https://github.com/${repository}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          https://github.com/{repository}@{version}\n        </a>\n      </Footer>\n    </>\n  </ThemeProvider>\n)\n\nexport default hot(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    )\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}